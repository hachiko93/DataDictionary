package DataDictionaryDSL.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(13);
  /*package*/ final ConceptDescriptor myConceptAbstractField = createDescriptorForAbstractField();
  /*package*/ final ConceptDescriptor myConceptAbstractStructure = createDescriptorForAbstractStructure();
  /*package*/ final ConceptDescriptor myConceptAggregation = createDescriptorForAggregation();
  /*package*/ final ConceptDescriptor myConceptDataDictionary = createDescriptorForDataDictionary();
  /*package*/ final ConceptDescriptor myConceptDomain = createDescriptorForDomain();
  /*package*/ final ConceptDescriptor myConceptExclusiveSpecialization = createDescriptorForExclusiveSpecialization();
  /*package*/ final ConceptDescriptor myConceptField = createDescriptorForField();
  /*package*/ final ConceptDescriptor myConceptFieldRef = createDescriptorForFieldRef();
  /*package*/ final ConceptDescriptor myConceptNonExclusiveSpecialization = createDescriptorForNonExclusiveSpecialization();
  /*package*/ final ConceptDescriptor myConceptPredefined = createDescriptorForPredefined();
  /*package*/ final ConceptDescriptor myConceptRestriction = createDescriptorForRestriction();
  /*package*/ final ConceptDescriptor myConceptStructureField = createDescriptorForStructureField();
  /*package*/ final ConceptDescriptor myConceptUserDefined = createDescriptorForUserDefined();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptAbstractField.getId(), 0);
    myIndexMap.put(myConceptAbstractStructure.getId(), 1);
    myIndexMap.put(myConceptAggregation.getId(), 2);
    myIndexMap.put(myConceptDataDictionary.getId(), 3);
    myIndexMap.put(myConceptDomain.getId(), 4);
    myIndexMap.put(myConceptExclusiveSpecialization.getId(), 5);
    myIndexMap.put(myConceptField.getId(), 6);
    myIndexMap.put(myConceptFieldRef.getId(), 7);
    myIndexMap.put(myConceptNonExclusiveSpecialization.getId(), 8);
    myIndexMap.put(myConceptPredefined.getId(), 9);
    myIndexMap.put(myConceptRestriction.getId(), 10);
    myIndexMap.put(myConceptStructureField.getId(), 11);
    myIndexMap.put(myConceptUserDefined.getId(), 12);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractField, myConceptAbstractStructure, myConceptAggregation, myConceptDataDictionary, myConceptDomain, myConceptExclusiveSpecialization, myConceptField, myConceptFieldRef, myConceptNonExclusiveSpecialization, myConceptPredefined, myConceptRestriction, myConceptStructureField, myConceptUserDefined);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptAbstractField;
      case 1:
        return myConceptAbstractStructure;
      case 2:
        return myConceptAggregation;
      case 3:
        return myConceptDataDictionary;
      case 4:
        return myConceptDomain;
      case 5:
        return myConceptExclusiveSpecialization;
      case 6:
        return myConceptField;
      case 7:
        return myConceptFieldRef;
      case 8:
        return myConceptNonExclusiveSpecialization;
      case 9:
        return myConceptPredefined;
      case 10:
        return myConceptRestriction;
      case 11:
        return myConceptStructureField;
      case 12:
        return myConceptUserDefined;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForAbstractField() {
    return new ConceptDescriptorBuilder("DataDictionaryDSL.structure.AbstractField", MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8bc1L)).super_("DataDictionaryDSL.structure.AbstractStructure").version(1).super_(MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8be6L)).parents("DataDictionaryDSL.structure.AbstractStructure").parentIds(MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8be6L)).abstract_().sourceNode(new SNodePointer("r:258990bc-3076-42b9-9674-e412dba53e8a(DataDictionaryDSL.structure)", "1575964350294494145")).create();
  }
  private static ConceptDescriptor createDescriptorForAbstractStructure() {
    return new ConceptDescriptorBuilder("DataDictionaryDSL.structure.AbstractStructure", MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8be6L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x6855f68baae98b3aL, "structure", MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8be6L), true, false, false, new SNodePointer("r:258990bc-3076-42b9-9674-e412dba53e8a(DataDictionaryDSL.structure)", "7518186232693230394"))).children(new String[]{"structure"}, new boolean[]{false}).abstract_().sourceNode(new SNodePointer("r:258990bc-3076-42b9-9674-e412dba53e8a(DataDictionaryDSL.structure)", "1575964350294494182")).create();
  }
  private static ConceptDescriptor createDescriptorForAggregation() {
    return new ConceptDescriptorBuilder("DataDictionaryDSL.structure.Aggregation", MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8be8L)).super_("DataDictionaryDSL.structure.StructureField").version(1).super_(MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8be7L)).parents("DataDictionaryDSL.structure.StructureField").parentIds(MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8be7L)).sourceNode(new SNodePointer("r:258990bc-3076-42b9-9674-e412dba53e8a(DataDictionaryDSL.structure)", "1575964350294494184")).create();
  }
  private static ConceptDescriptor createDescriptorForDataDictionary() {
    return new ConceptDescriptorBuilder("DataDictionaryDSL.structure.DataDictionary", MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8bdfL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x15def33a0dfb8be3L, "structure", MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8be6L), true, true, false, new SNodePointer("r:258990bc-3076-42b9-9674-e412dba53e8a(DataDictionaryDSL.structure)", "1575964350294494179"))).children(new String[]{"structure"}, new boolean[]{true}).rootable().sourceNode(new SNodePointer("r:258990bc-3076-42b9-9674-e412dba53e8a(DataDictionaryDSL.structure)", "1575964350294494175")).create();
  }
  private static ConceptDescriptor createDescriptorForDomain() {
    return new ConceptDescriptorBuilder("DataDictionaryDSL.structure.Domain", MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8b9dL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).abstract_().sourceNode(new SNodePointer("r:258990bc-3076-42b9-9674-e412dba53e8a(DataDictionaryDSL.structure)", "1575964350294494109")).create();
  }
  private static ConceptDescriptor createDescriptorForExclusiveSpecialization() {
    return new ConceptDescriptorBuilder("DataDictionaryDSL.structure.ExclusiveSpecialization", MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8be9L)).super_("DataDictionaryDSL.structure.StructureField").version(1).super_(MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8be7L)).parents("DataDictionaryDSL.structure.StructureField").parentIds(MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8be7L)).sourceNode(new SNodePointer("r:258990bc-3076-42b9-9674-e412dba53e8a(DataDictionaryDSL.structure)", "1575964350294494185")).create();
  }
  private static ConceptDescriptor createDescriptorForField() {
    return new ConceptDescriptorBuilder("DataDictionaryDSL.structure.Field", MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8bd3L)).super_("DataDictionaryDSL.structure.AbstractField").version(1).super_(MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8bc1L)).parents("DataDictionaryDSL.structure.AbstractField", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8bc1L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x6855f68baae9ba1dL, "restriction", MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8bc6L), true, false, false, new SNodePointer("r:258990bc-3076-42b9-9674-e412dba53e8a(DataDictionaryDSL.structure)", "7518186232693242397")), new ConceptDescriptorBuilder.Link(0x6855f68baae95d56L, "domain", MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8b9dL), false, false, false, new SNodePointer("r:258990bc-3076-42b9-9674-e412dba53e8a(DataDictionaryDSL.structure)", "7518186232693218646"))).children(new String[]{"restriction", "domain"}, new boolean[]{false, false}).sourceNode(new SNodePointer("r:258990bc-3076-42b9-9674-e412dba53e8a(DataDictionaryDSL.structure)", "1575964350294494163")).create();
  }
  private static ConceptDescriptor createDescriptorForFieldRef() {
    return new ConceptDescriptorBuilder("DataDictionaryDSL.structure.FieldRef", MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8bdbL)).super_("DataDictionaryDSL.structure.AbstractField").version(1).super_(MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8bc1L)).parents("DataDictionaryDSL.structure.AbstractField").parentIds(MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8bc1L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x15def33a0dfb8bdcL, "fieldRef", MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8bd3L), false, new SNodePointer("r:258990bc-3076-42b9-9674-e412dba53e8a(DataDictionaryDSL.structure)", "1575964350294494172"))).references("fieldRef").sourceNode(new SNodePointer("r:258990bc-3076-42b9-9674-e412dba53e8a(DataDictionaryDSL.structure)", "1575964350294494171")).create();
  }
  private static ConceptDescriptor createDescriptorForNonExclusiveSpecialization() {
    return new ConceptDescriptorBuilder("DataDictionaryDSL.structure.NonExclusiveSpecialization", MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8beaL)).super_("DataDictionaryDSL.structure.StructureField").version(1).super_(MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8be7L)).parents("DataDictionaryDSL.structure.StructureField").parentIds(MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8be7L)).sourceNode(new SNodePointer("r:258990bc-3076-42b9-9674-e412dba53e8a(DataDictionaryDSL.structure)", "1575964350294494186")).create();
  }
  private static ConceptDescriptor createDescriptorForPredefined() {
    return new ConceptDescriptorBuilder("DataDictionaryDSL.structure.Predefined", MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8bb0L)).super_("DataDictionaryDSL.structure.Domain").version(1).super_(MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8b9dL)).parents("DataDictionaryDSL.structure.Domain").parentIds(MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8b9dL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x15def33a0dfb8bb8L, "type", new SNodePointer("r:258990bc-3076-42b9-9674-e412dba53e8a(DataDictionaryDSL.structure)", "1575964350294494136")), new ConceptDescriptorBuilder.Prop(0x15def33a0dfb8bbaL, "length", new SNodePointer("r:258990bc-3076-42b9-9674-e412dba53e8a(DataDictionaryDSL.structure)", "1575964350294494138"))).properties("type", "length").alias("", "Predefined domain. Example: integer (50).").sourceNode(new SNodePointer("r:258990bc-3076-42b9-9674-e412dba53e8a(DataDictionaryDSL.structure)", "1575964350294494128")).create();
  }
  private static ConceptDescriptor createDescriptorForRestriction() {
    return new ConceptDescriptorBuilder("DataDictionaryDSL.structure.Restriction", MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8bc6L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x15def33a0dfb8bc7L, "restriction", new SNodePointer("r:258990bc-3076-42b9-9674-e412dba53e8a(DataDictionaryDSL.structure)", "1575964350294494151"))).properties("restriction").alias("", "Restriction on a field. Example: NOT NULL.").sourceNode(new SNodePointer("r:258990bc-3076-42b9-9674-e412dba53e8a(DataDictionaryDSL.structure)", "1575964350294494150")).create();
  }
  private static ConceptDescriptor createDescriptorForStructureField() {
    return new ConceptDescriptorBuilder("DataDictionaryDSL.structure.StructureField", MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8be7L)).super_("DataDictionaryDSL.structure.AbstractStructure").version(1).super_(MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8be6L)).parents("DataDictionaryDSL.structure.AbstractStructure").parentIds(MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8be6L)).sourceNode(new SNodePointer("r:258990bc-3076-42b9-9674-e412dba53e8a(DataDictionaryDSL.structure)", "1575964350294494183")).create();
  }
  private static ConceptDescriptor createDescriptorForUserDefined() {
    return new ConceptDescriptorBuilder("DataDictionaryDSL.structure.UserDefined", MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8bb1L)).super_("DataDictionaryDSL.structure.Domain").version(1).super_(MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8b9dL)).parents("DataDictionaryDSL.structure.Domain", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8b9dL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x15def33a0dfb8bbfL, "type", MetaIdFactory.conceptId(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8bb0L), false, false, false, new SNodePointer("r:258990bc-3076-42b9-9674-e412dba53e8a(DataDictionaryDSL.structure)", "1575964350294494143"))).children(new String[]{"type"}, new boolean[]{false}).alias("", "Domain defined by user. Example: IdentificationNumber ( string (12), NOT NULL).").sourceNode(new SNodePointer("r:258990bc-3076-42b9-9674-e412dba53e8a(DataDictionaryDSL.structure)", "1575964350294494129")).create();
  }
}
