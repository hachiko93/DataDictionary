package DataDictionaryDSL.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.errors.messageTargets.MessageTarget;
import jetbrains.mps.errors.messageTargets.NodeMessageTarget;
import jetbrains.mps.errors.IErrorReporter;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class check_Domain_NonTypesystemRule extends AbstractNonTypesystemRule_Runtime implements NonTypesystemRule_Runtime {
  public check_Domain_NonTypesystemRule() {
  }
  public void applyRule(final SNode domain, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    {
      final SNode predefined = domain;
      if (SNodeOperations.isInstanceOf(predefined, MetaAdapterFactory.getConcept(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8bb0L, "DataDictionaryDSL.structure.Predefined"))) {
        if (SPropertyOperations.getString(predefined, MetaAdapterFactory.getProperty(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8bb0L, 0x15def33a0dfb8bb8L, "type")) == null) {
          {
            MessageTarget errorTarget = new NodeMessageTarget();
            IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(domain, "Domain type has to be defined", "r:75428752-4662-436a-adf4-adbba92abeb2(DataDictionaryDSL.typesystem)", "5174573914220628384", null, errorTarget);
          }
        }
        // isto za lenght - kako? 
      }
    }
    {
      final SNode userDefined = domain;
      if (SNodeOperations.isInstanceOf(userDefined, MetaAdapterFactory.getConcept(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8bb1L, "DataDictionaryDSL.structure.UserDefined"))) {
        if (isEmptyString(SPropertyOperations.getString(userDefined, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")))) {
          {
            MessageTarget errorTarget = new NodeMessageTarget();
            IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(domain, "Domain name has to be defined", "r:75428752-4662-436a-adf4-adbba92abeb2(DataDictionaryDSL.typesystem)", "5174573914220661442", null, errorTarget);
          }
        }
        // ista gore, nekako da kreiram metodu? 
      }
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return MetaAdapterFactory.getConcept(0xbf590b41a0a34576L, 0x9cd0dea0bf554be3L, 0x15def33a0dfb8b9dL, "DataDictionaryDSL.structure.Domain");
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }
  private static boolean isEmptyString(String str) {
    return str == null || str.length() == 0;
  }
}
